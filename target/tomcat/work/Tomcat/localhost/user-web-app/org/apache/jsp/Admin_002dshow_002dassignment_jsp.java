/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2025-01-05 21:20:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.user.model.Assignment;

public final class Admin_002dshow_002dassignment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>All Assignments</title>\n");
      out.write("    <style>\n");
      out.write("        /* Table styling */\n");
      out.write("        table {\n");
      out.write("            width: 100%;\n");
      out.write("            border-collapse: collapse;\n");
      out.write("            margin-top: 20px;\n");
      out.write("        }\n");
      out.write("        th, td {\n");
      out.write("            padding: 10px;\n");
      out.write("            text-align: left;\n");
      out.write("            border: 1px solid #ddd;\n");
      out.write("        }\n");
      out.write("        th {\n");
      out.write("            background-color: #f2f2f2;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Button styling */\n");
      out.write("        .button {\n");
      out.write("            display: inline-block;\n");
      out.write("            padding: 8px 12px;\n");
      out.write("            background-color: #007BFF;\n");
      out.write("            color: white;\n");
      out.write("            text-decoration: none;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("        .button:hover {\n");
      out.write("            background-color: #0056b3;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        /* Message styling */\n");
      out.write("        .message {\n");
      out.write("            color: red;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <h1>All Assignments</h1>\n");
      out.write("\n");
      out.write("    <!-- Display Message -->\n");
      out.write("    ");
 String message = (String) request.getAttribute("message"); 
      out.write("\n");
      out.write("    ");
 if (message != null) { 
      out.write("\n");
      out.write("        <p class=\"message\">");
      out.print( message );
      out.write("</p>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("    <!-- Assignments Table -->\n");
      out.write("    <table>\n");
      out.write("        <thead>\n");
      out.write("            <tr>\n");
      out.write("                <th>Assignment ID</th>\n");
      out.write("                <th>Course ID</th>\n");
      out.write("                <th>Course Name</th>\n");
      out.write("                <th>Assignment</th>\n");
      out.write("                <th>Created Date</th>\n");
      out.write("                <th>Last Date</th>\n");
      out.write("                <th>Action</th>\n");
      out.write("            </tr>\n");
      out.write("        </thead>\n");
      out.write("        <tbody>\n");
      out.write("            ");
 
              
                List<Assignment> assignments = (List<Assignment>) request.getAttribute("assignments");

                
                if (assignments == null || assignments.isEmpty()) { 
            
      out.write("\n");
      out.write("            <tr>\n");
      out.write("                <td colspan=\"7\">No assignments found.</td>\n");
      out.write("            </tr>\n");
      out.write("            ");
 } else { 
              
                for (Assignment assignment : assignments) { 
            
      out.write("\n");
      out.write("            <tr>\n");
      out.write("                <td>");
      out.print( assignment.getAssignmentId() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( assignment.getCourseId() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( assignment.getCourseName() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( assignment.getAssignment() );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( new java.text.SimpleDateFormat("dd-MM-yyyy").format(assignment.getCreatedDate()) );
      out.write("</td>\n");
      out.write("                <td>");
      out.print( new java.text.SimpleDateFormat("dd-MM-yyyy").format(assignment.getLastDate()) );
      out.write("</td>\n");
      out.write("                <td>\n");
      out.write("                    <a href=\"viewAssignments?id=");
      out.print( assignment.getAssignmentId() );
      out.write("\" class=\"button\">View Assignment</a>\n");
      out.write("                </td>\n");
      out.write("            </tr>\n");
      out.write("            ");
 
                } 
            } 
            
      out.write("\n");
      out.write("        </tbody>\n");
      out.write("    </table>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
